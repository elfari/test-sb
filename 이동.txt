-- 문자열 정규화 함수 (공백/특수문자 제거 + 소문자)
CREATE OR REPLACE FUNCTION FN_NORMALIZE_STR(str IN VARCHAR2)
RETURN VARCHAR2
IS
BEGIN
    RETURN LOWER(REGEXP_REPLACE(str, '[^A-Za-z0-9]', ''));
END;
/



-- 유사도 퍼센트 계산 함수
CREATE OR REPLACE FUNCTION FN_SIMILARITY_PCT(str1 IN VARCHAR2, str2 IN VARCHAR2)
RETURN NUMBER
IS
    norm_str1 VARCHAR2(4000);
    norm_str2 VARCHAR2(4000);
    dist      NUMBER;
    max_len   NUMBER;
    sim_pct   NUMBER;
BEGIN
    -- 정규화
    norm_str1 := FN_NORMALIZE_STR(str1);
    norm_str2 := FN_NORMALIZE_STR(str2);

    -- 가장 긴 문자열 길이
    max_len := GREATEST(LENGTH(norm_str1), LENGTH(norm_str2));
    IF max_len = 0 THEN
        RETURN 100; -- 둘 다 비어있으면 100% 유사
    END IF;

    -- 편집거리 계산
    dist := UTL_MATCH.EDIT_DISTANCE(norm_str1, norm_str2);

    -- 유사도 퍼센트 = (1 - (편집거리 / 최대길이)) * 100
    sim_pct := (1 - dist / max_len) * 100;

    -- 0 ~ 100 사이로 보정
    IF sim_pct < 0 THEN
        sim_pct := 0;
    ELSIF sim_pct > 100 THEN
        sim_pct := 100;
    END IF;

    RETURN ROUND(sim_pct, 2);
END;
/



SELECT FN_SIMILARITY_PCT('Hello, World!', 'world hello!!') AS similarity_pct
FROM dual;



