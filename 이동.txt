-- 필요 시: 권한이 있어야 ALL_* 보임. 내 스키마만이면 ALL_* 대신 USER_* 사용 가능
-- 성능 위해 소유자(스키마) 필터 강추

WITH needles AS (  -- 검색어 목록
  SELECT LOWER('문자열1') s FROM dual UNION ALL
  SELECT LOWER('문자열2') FROM dual UNION ALL
  SELECT LOWER('문자열3') FROM dual UNION ALL
  SELECT LOWER('문자열4') FROM dual UNION ALL
  SELECT LOWER('문자열5') FROM dual UNION ALL
  SELECT LOWER('문자열6') FROM dual UNION ALL
  SELECT LOWER('문자열7') FROM dual UNION ALL
  SELECT LOWER('문자열8') FROM dual UNION ALL
  SELECT LOWER('문자열9') FROM dual
),
-- 프로시저/펑션/트리거/패키지바디: 소스가 줄 단위 저장됨
code_src AS (
  SELECT owner, name, type, text
  FROM   all_source
  WHERE  type IN ('PROCEDURE','FUNCTION','TRIGGER','PACKAGE BODY')
  -- AND owner = '스키마명'
),
-- 뷰 목록
view_list AS (
  SELECT owner, view_name
  FROM   all_views
  -- AND owner = '스키마명'
),
-- 뷰 DDL을 CLOB으로 가져와 본문 검색 (TEXT가 LONG이라 함수 사용 제약 회피)
view_src AS (
  SELECT v.owner,
         v.view_name AS name,
         'VIEW'      AS type,
         DBMS_METADATA.GET_DDL('VIEW', v.view_name, v.owner) AS text
  FROM   view_list v
),
-- 통합 소스
src AS (
  SELECT owner, name, type, text FROM code_src
  UNION ALL
  SELECT owner, name, type, text FROM view_src
),
-- (객체 × 검색어) 매트릭스에서 해당 검색어가 단 1번이라도 나오면 hit=1
hits AS (
  SELECT s.owner, s.name, s.type, n.s,
         MAX(CASE WHEN INSTR(LOWER(s.text), n.s) > 0 THEN 1 ELSE 0 END) AS hit
  FROM   src s
  CROSS  JOIN needles n
  GROUP  BY s.owner, s.name, s.type, n.s
),
-- 객체별 일치 검색어 개수 합계
agg AS (
  SELECT owner, name, type, SUM(hit) AS match_cnt
  FROM   hits
  GROUP  BY owner, name, type
)
-- "2개 이상 포함" 필터링
SELECT owner, name, type, match_cnt
FROM   agg
WHERE  match_cnt >= 2
ORDER  BY match_cnt DESC, owner, name;